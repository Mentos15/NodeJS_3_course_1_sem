type Faculty {
    FACULTY_ID: Int!
    FACULTY_NAME: String!
    Pulpits: [Pulpit]
}
type Pulpit {
    PULPIT_ID: Int!
    PULPIT_NAME: String!
    Faculty: Faculty!
}
type Subject {
    SUBJECT_ID: Int!
    SUBJECT_NAME: String!
    Pulpit: Pulpit!
}
type Teacher {
    TEACHER_ID: Int!
    TEACHER_NAME: String!
    Pulpit: Pulpit!
}

input NewFaculty {
    facultyId: Int
    facultyName: String!
}
input NewPulpit {
    pulpitId: Int
    pulpitName: String!
    facultyId: Int
}
input NewSubject {
     subjectId: Int
     subjectName: String!
     pulpitId: Int
 }
input NewTeacher {
    teacherId: Int
    teacherName: String!
    pulpitId: Int
}


type Query {
    getFaculties(faculty: Int): [Faculty]
    getPulpits(pulpit: Int): [Pulpit]
    getSubjects(subject: Int, faculty: Int): [Subject]
    getTeachers(teacher: Int, faculty: Int): [Teacher]
}
type Mutation {
    setFaculty(faculty: NewFaculty!): Faculty
    setPulpit(pulpit: NewPulpit!): Pulpit
    setSubject(subject: NewSubject!): Subject
    setTeacher(teacher: NewTeacher!): Teacher

    delFaculty(id: Int!): Faculty
    delPulpit(id: Int!): Pulpit
    delSubject(id: Int!): Subject
    delTeacher(id: Int!): Teacher
}
